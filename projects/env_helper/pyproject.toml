[tool.poetry]
name = "env-helper"
version = "1.2.0"
description = "Service that helps to set environment variables in .env file"
authors = ["Ilia Boyazitov"]
license = "GPL-3.0-or-later"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
rich = "^13.5.2"
telethon = "^1.29.3"
vkaudiotoken = {git = "https://github.com/Bizordec/vkaudiotoken-python.git"}
vkbottle = "^4.3.12"
aiohttp = "^3.8.5"
pydantic = "<2.0.0"
python-dotenv = "^1.0.0"
loguru = "^0.7.0"
uvloop = "^0.19.0"


[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
ruff = "^0.0.292"
mypy = "^1.5.1"
commitizen = "^3.10.0"

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
select = [
    "F",        # pyflakes
    "E",        # pycodestyle errors
    "W",        # pycodestyle warnings
    "C90",      # mccabe
    "I",        # isort
    "N",        # pep8-naming
    "UP",       # pyupgrade
    "YTT",      # flake8-2020
    "ANN",      # flake8-annotations
    "ASYNC",    # flake8-async
    "S",        # flake8-bandit
    "BLE",      # flake8-blind-except
    "FBT",      # flake8-boolean-trap
    "B",        # flake8-bugbear
    "A",        # flake8-builtins
    "COM",      # flake8-commas
    "C4",       # flake8-comprehensions
    "DTZ",      # flake8-datetimez
    "T10",      # flake8-debugger
    "EXE",      # flake8-executable
    "FA",       # flake8-future-annotations
    "ISC",      # flake8-implicit-str-concat
    "ICN",      # flake8-import-conventions
    "G",        # flake8-logging-format
    "INP",      # flake8-no-pep420
    "PIE",      # flake8-pie
    "T20",      # flake8-print
    "PT",       # flake8-pytest-style
    "Q",        # flake8-quotes
    "RSE",      # flake8-raise
    "RET",      # flake8-return
    "SLF",      # flake8-self
    "SLOT",     # flake8-slots
    "SIM",      # flake8-simplify
    "TID",      # flake8-tidy-imports
    "TCH",      # flake8-type-checking
    "ARG",      # flake8-unused-arguments
    "PTH",      # flake8-use-pathlib
    "PGH",      # pygrep-hooks
    "PL",       # pylint
    "TRY",      # tryceratops
    "FLY",      # flynt
    "PERF",     # perflint
    "RUF",      # ruff
]
ignore = [
    "E501",     # line-too-long
    "ANN101",   # missing-type-self
    "ANN102",   # missing-type-cls
    "FBT001",   # boolean-type-hint-positional-argument
    "PLR0912",  # too-many-branches
    "PLR0913",  # too-many-arguments
    "PLR0915",  # too-many-statements
    "TRY003",   # raise-vanilla-args
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
