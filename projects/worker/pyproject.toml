[tool.poetry]
package-mode = false
name = "worker"
version = "0.1.0"
description = "Celery worker to forward VK entities to Telegram"
authors = ["Ilia Boyazitov"]
license = "GPL-3.0-or-later"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
celery = {extras = ["redis"], version = "^5.4.0"}
vtt_common = {path = "../../libs/vtt_common", develop = true}
loguru = "^0.7.2"
pydantic = "<2.0.0"
vkbottle = "^4.3.12"
vkaudiotoken = {git = "https://github.com/Bizordec/vkaudiotoken-python.git"}
telethon = "^1.35.0"
python-dotenv = "^1.0.1"
aiofiles = "<22.2"
eyed3 = "^0.9.7"
ffmpeg-python = "^0.2.0"
pillow = "^10.3.0"
hachoir = "^3.3.0"
cryptg = "^0.4.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
ruff = "^0.4.8"
commitizen = "^3.27.0"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.5.post1"
babel = "^2.15.0"
types-aiofiles = "<22.2"
pytest-cov = "^5.0.0"
aioresponses = "^0.7.6"


[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
plugins = [
    "pydantic.mypy"
]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D100",     # pydocstyle: undocumented-public-module
    "D101",     # pydocstyle: undocumented-public-class
    "D102",     # pydocstyle: undocumented-public-method
    "D103",     # pydocstyle: undocumented-public-function
    "D104",     # pydocstyle: undocumented-public-package
    "D105",     # pydocstyle: undocumented-magic-method
    "D106",     # pydocstyle: undocumented-public-nested-class
    "D107",     # pydocstyle: undocumented-public-init
    "D203",     # pydocstyle: one-blank-line-before-class
    "D213",     # pydocstyle: multi-line-summary-second-line
    "ANN002",   # flake8-annotations: missing-type-args
    "ANN003",   # flake8-annotations: missing-type-kwargs
    "ANN101",   # flake8-annotations: missing-type-self
    "ANN102",   # flake8-annotations: missing-type-cls
    "TRIO",     # flake8-trio
    "FBT001",   # flake8-boolean-trap: boolean-type-hint-positional-argument
    "DJ",       # flake8-django
    "EM",       # flake8-errmsg
    "TD002",    # flake8-todos: missing-todo-author
    "TD003",    # flake8-todos: missing-todo-link
    "FIX",      # flake8-fixme
    "PD",       # pandas-vet
    "PLR0911",  # pylint: too-many-return-statements
    "PLR0913",  # pylint: too-many-arguments
    "TRY003",   # tryceratops: raise-vanilla-args
    "NPY",      # numpy
    "AIR",      # airflow
    "RUF001",   # ruff: ambiguous-unicode-character-string
    "RUF002",   # ruff: ambiguous-unicode-character-docstring
    "RUF003",   # ruff: ambiguous-unicode-character-comment
]

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = [
    "S101",     # flake8-bandit: assert
    "SLF001",   # flake8-self: private-member-access
    "PLR2004"   # pylint: magic-value-comparison
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
