repos:
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.20.0
    hooks:
      - id: commitizen
      - id: commitizen-branch
        stages: [push]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
  - repo: local
    hooks:
      - id: ruff
        name: (env_helper) ruff
        language: python
        types_or: [python, pyi]
        files: ^projects/env_helper/
        entry: sh -c 'cd projects/env_helper/ && .venv/bin/ruff check --force-exclude'
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: (env_helper) ruff-format
        language: python
        types_or: [python, pyi]
        files: ^projects/env_helper/
        entry: sh -c 'cd projects/env_helper/ && .venv/bin/ruff format --force-exclude'

      - id: ruff
        name: (env_validator) ruff
        language: python
        types_or: [python, pyi]
        files: ^projects/env_validator/
        entry: sh -c 'cd projects/env_validator/ && .venv/bin/ruff check --force-exclude'
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: (env_validator) ruff-format
        language: python
        types_or: [python, pyi]
        files: ^projects/env_validator/
        entry: sh -c 'cd projects/env_validator/ && .venv/bin/ruff format --force-exclude'

      - id: ruff
        name: (cb_receiver) ruff
        language: python
        types_or: [python, pyi]
        files: ^projects/cb_receiver/
        entry: sh -c 'cd projects/cb_receiver/ && .venv/bin/ruff check --force-exclude'
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: (cb_receiver) ruff-format
        language: python
        types_or: [python, pyi]
        files: ^projects/cb_receiver/
        entry: sh -c 'cd projects/cb_receiver/ && .venv/bin/ruff format --force-exclude'

      - id: ruff
        name: (worker) ruff
        language: python
        types_or: [python, pyi]
        files: ^projects/worker/
        entry: sh -c 'cd projects/worker/ && .venv/bin/ruff check --force-exclude'
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: (worker) ruff-format
        language: python
        types_or: [python, pyi]
        files: ^projects/worker/
        entry: sh -c 'cd projects/worker/ && .venv/bin/ruff format --force-exclude'

      - id: ruff
        name: (tgm_bot) ruff
        language: python
        types_or: [python, pyi]
        files: ^projects/tgm_bot/
        entry: sh -c 'cd projects/tgm_bot/ && .venv/bin/ruff check --force-exclude'
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: (tgm_bot) ruff-format
        language: python
        types_or: [python, pyi]
        files: ^projects/tgm_bot/
        entry: sh -c 'cd projects/tgm_bot/ && .venv/bin/ruff format --force-exclude'
  - repo: local
    hooks:
      - id: mypy
        name: (env_helper) mypy
        language: python
        types_or: [python, pyi]
        files: ^projects/env_helper/
        entry: sh -c 'cd projects/env_helper/ && .venv/bin/mypy .'
      - id: mypy
        name: (env_validator) mypy
        language: python
        types_or: [python, pyi]
        files: ^projects/env_validator/
        entry: sh -c 'cd projects/env_validator/ && .venv/bin/mypy .'
      - id: mypy
        name: (cb_receiver) mypy
        language: python
        types_or: [python, pyi]
        files: ^projects/cb_receiver/
        entry: sh -c 'cd projects/cb_receiver/ && .venv/bin/mypy .'
      - id: mypy
        name: (worker) mypy
        language: python
        types_or: [python, pyi]
        files: ^projects/worker/
        entry: sh -c 'cd projects/worker/ && .venv/bin/mypy .'
      - id: mypy
        name: (worker) mypy
        language: python
        types_or: [python, pyi]
        files: ^projects/worker/tgm_bot
        entry: sh -c 'cd projects/worker/ && .venv/bin/mypy .'
